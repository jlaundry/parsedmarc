name: Python tests

permissions:
  contents: read

on:
  push:
    branches:
      - master
      - update-test
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libemail-outlook-message-perl
        wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg
        sudo apt-get install apt-transport-https
        echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list
        sudo apt-get update && sudo apt-get install elasticsearch
        sudo sed -i 's/xpack.security.enabled: true/xpack.security.enabled: false/' /etc/elasticsearch/elasticsearch.yml
        sudo systemctl restart elasticsearch
        sudo systemctl --no-pager status elasticsearch
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install hatch myst-parser[linkify] nose pytest pytest-cov ruff sphinx sphinx_rtd_theme
    - name: Test building documentation
      run: |
        cd docs
        make html
    - name: Check code style
      run: |
        ruff check .
    - name: Run unit tests
      run: |
        pytest --cov --cov-report=xml
    - name: Test sample DMARC reports
      run: |
        pip install -e .
        parsedmarc --debug -c ci.ini samples/aggregate/*
        parsedmarc --debug -c ci.ini samples/forensic/*
    - name: Test building packages
      run: |
        hatch build
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
          token: ${{ secrets.CODECOV_TOKEN }}
